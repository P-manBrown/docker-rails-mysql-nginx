services:
  db:
    image: mysql:8.0.30
    user: mysql
    command: >-
      mysqld
      & chmod 555 /docker-entrypoint-initdb.d/00_create-test-db.sh
    healthcheck:
      test: mysqladmin ping -h db -u${DOLLAR}${DOLLAR}{MYSQL_USER} -p${DOLLAR}${DOLLAR}{MYSQL_PASSWORD}
      interval: 1s
      start_period: 50s
    restart: on-failure
    volumes:
      - mysql-datadir:/var/lib/mysql
      - type: bind
        source: ./.docker/db/initdb.d
        target: /docker-entrypoint-initdb.d
    configs:
      - source: mysql-docker
        target: /etc/mysql/conf.d/myapp.cnf
    environment:
      - TZ=Asia/Tokyo
    env_file:
      - ./.docker/db/environment/mysql-variables.env
    secrets:
      - mysql-pass
      - mysql-root-pass
    ports:
      - ${DOLLAR}{DB_PORT}:3306
  api:
    build:
      context: .
      dockerfile: ./.docker/api/Dockerfile
      args:
        - PROJECT_NAME=${DOLLAR}{COMPOSE_PROJECT_NAME}
        - RUBY_IMAGE_TAG=3.1.2
        - RUBYGEMS_VERSION=3.3.20
      secrets:
        - github-pkg-cred
    restart: on-failure
    volumes:
      - .:/${DOLLAR}{COMPOSE_PROJECT_NAME}
      - gem-home:/usr/local/bundle
      - puma-socket:/${DOLLAR}{COMPOSE_PROJECT_NAME}/tmp/sockets
    environment:
      - RAILS_ENV=${DOLLAR}{RAILS_ENV}
    env_file:
      - ./.docker/db/environment/mysql-variables.env
    secrets:
      - mysql-pass
    ports:
      - ${DOLLAR}{API_PORT}:3000
    depends_on:
      db:
        condition: service_healthy
  web:
    build:
      context: ./.docker/web
      args:
        - NGINX_IMAGE_TAG=1.23.1
    volumes:
      - puma-socket:/${DOLLAR}{COMPOSE_PROJECT_NAME}/tmp/sockets
    configs:
      - source: nginx-${TPL_PROJECT_NAME}
        target: /etc/nginx/conf.d/${TPL_PROJECT_NAME}.conf
    ports:
      - ${DOLLAR}{WEB_PORT}:80
    depends_on:
      - api
configs:
  mysql-docker:
    file: ./.docker/db/conf.d/docker.cnf
  nginx-${TPL_PROJECT_NAME}:
    file: ./.docker/web/conf.d/${TPL_PROJECT_NAME}.conf
secrets:
  mysql-pass:
     file: ./.docker/db/environment/passwords/mysql-pass.txt
  mysql-root-pass:
     file: ./.docker/db/environment/passwords/mysql-root-pass.txt
  github-pkg-cred:
    file: ./.docker/api/secrets/github-pkg-cred.txt
volumes:
  mysql-datadir:
  gem-home:
  puma-socket:
